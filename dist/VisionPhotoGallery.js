!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.VisionPhotoGallery=e():t.VisionPhotoGallery=e()}(this,(function(){return function(){"use strict";var t={d:function(e,o){for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},e={};function o(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function n(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function a(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}t.d(e,{default:function(){return s}});var s=function(){function t(e){var o=e.root,n=e.employeeId,r=e.visionPersonId,i=e.token,a=e.disableControls,s=void 0!==a&&a;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!o)throw new Error("Не указан ID корневого элемента для галереи!");var l=document.getElementById(o);if(!l)throw new Error("Проверьте указанный ID корневого элемента для галереи!");if(t.rootElement=l,!n&&!r)throw new Error("Не указан ID пользователя на портале Vision");this.employeeId=n,this.visionPersonId=r,this.token=i,this.disableControls=s,t.draw()}var e,o,a;return e=t,a=[{key:"update",value:function(t){var e=t.employeeId,o=t.token;this.employeeId=e,this.token=o,this.draw()}},{key:"handleError",value:function(t){var e=t.message,o=t.blockingErrorMessage;if(this.errorFunction){var n="";"object"===r(e)&&(e.faultstring?n=e.faultstring:Object.keys(e).reverse().forEach((function(t){n+="".concat(e[t],"<br/>")})));var i=n.length?n:JSON.stringify(e);this.errorFunction(i,"Ошибка")}else{if(o)throw new Error(o);console.log(e)}}},{key:"request",value:function(t){var e=t.requestPath,o=t.requestBody,n={method:"POST",mode:"same-origin",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":this.token},body:JSON.stringify(o)};return fetch("/api/v2/vision/".concat(e,"/"),n)}},{key:"getPhotos",value:function(){var t={};return this.employeeId&&!this.visionPersonId?t.employeeId=this.employeeId:this.visionPersonId&&(t.vision_person_id=this.visionPersonId),this.request({requestPath:"get_photos",requestBody:n(n({},t),{},{masterAlbum:!0})})}},{key:"addPhoto",value:function(t){return this.request({requestPath:"add_photo",requestBody:{employeeId:this.employeeId,image:t}})}},{key:"deletePhoto",value:function(t){return this.request({requestPath:"delete_photo",requestBody:{photo_id:t}})}},{key:"updatePhoto",value:function(t){return this.request({requestPath:"update_photo",requestBody:{employeeId:this.employeeId,photo_id:t}})}},{key:"draw",value:function(){var t=this,e=this.rootElement;e.innerHTML='\n      <div class="vision-photo-gallery vision-photo-gallery--message" data-message="Загрузка...">\n        <input type="file" class="vision-photo-gallery__file-field" tabindex="-1">\n        <div class="vision-photo-gallery__item vision-photo-gallery__item--main">\n          <h4 class="vision-photo-gallery__title">Основная фотография</h4>\n          <div class="vg-main-photo"></div>\n        </div>\n        <div class="vision-photo-gallery__item">\n          <h4 class="vision-photo-gallery__title">Галерея</h4>\n          <div class="vg-gallery"></div>\n        </div>\n      </div>\n    ';var o=document.querySelector(".vision-photo-gallery"),n=e.querySelector(".vg-main-photo"),r=e.querySelector(".vg-gallery"),i=this.disableControls;this.getPhotos().then((function(e){if(n.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null}),r.innerHTML=t.createPhotoElement({main:!1,empty:!0,photoId:null}),e.ok)return e.json();n.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null}),o.classList.remove("vision-photo-gallery--message"),n.parentElement.classList.add("hidden"),t.initEvents()}),(function(e){t.handleError({message:e}),t.initEvents()})).then((function(e){if(e){var a=e.find((function(t){return t.main})),s=e.filter((function(t){return!t.main}));if(a?n.innerHTML=t.createPhotoElement(a):n.parentElement.classList.add("hidden"),s.length){var l="";s.forEach((function(e){return l+=t.createPhotoElement(e)})),i||(l+=t.createPhotoElement({main:!1,empty:!0,photoId:null})),r.innerHTML=l}t.initEvents(),o.classList.remove("vision-photo-gallery--message")}}),(function(e){t.handleError({message:e}),t.initEvents()})).catch((function(e){t.handleError({message:e}),t.initEvents()})),this.initEvents()}},{key:"createPhotoElement",value:function(t){var e=t.photoId,o=t.main,n=t.empty,r=t.path,i=t.avatarUrl,a=this.disableControls,s="",l="",u="",c="";return r&&(u='style="background-image: url('.concat(r,')"')),i&&(u='style="background-image: url('.concat(i,')"')),o&&(c='data-main="'.concat(o,'"')),o&&!n?(l="vg-photo vg-photo--main",s='\n        <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n      '):o&&n?(l="vg-photo vg-photo--main",s='\n        <button class="vg-photo__button vg-button" data-action="upload-photo">Загрузить</button>\n      '):!o&&n?(l="vg-gallery__item vg-photo vg-photo--upload",s='\n        <button class="vg-photo__button vg-button vg-button--upload" data-action="upload-photo">&#43;</button>\n      '):(l="vg-gallery__item vg-photo",s='\n        <button class="vg-photo__button vg-button vg-button--green" data-action="update-photo">Выбрать</button>\n        <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n      '),'\n      <div class="'.concat(l,'"\n        ').concat(u,'\n        data-photo-id="').concat(e,'"\n        ').concat(c,">\n        ").concat(a?"":s,"\n        </div>\n      ")}},{key:"initEvents",value:function(){var t=this;this.rootElement.querySelectorAll("button").forEach((function(e){e.addEventListener("click",t.router[e.dataset.action],!1)}))}}],(o=[{key:"errorFunction",get:function(){return t.errorFunction},set:function(e){e&&(t.errorFunction=e)}},{key:"employeeId",get:function(){return t.employeeId},set:function(e){e&&(t.employeeId=e)}},{key:"visionPersonId",get:function(){return t.employeeId},set:function(e){e&&(t.visionPersonId=e)}},{key:"rootElement",get:function(){return t.rootElement}},{key:"token",get:function(){return t.token},set:function(e){e&&(t.token=e)}},{key:"disableControls",get:function(){return t.disableControls},set:function(e){e&&(t.disableControls=e)}}])&&i(e.prototype,o),a&&i(e,a),t}();return a(s,"employeeId",null),a(s,"visionPersonId",null),a(s,"rootElement",null),a(s,"token",null),a(s,"disableControls",!1),a(s,"errorFunction",null),a(s,"router",{"upload-photo":function(t){var e=s.rootElement.querySelector('input[type="file"]');e.addEventListener("change",s.router["file-input-changed"]),e.click()},"file-input-changed":function(t){var e=t.target.files[0],o=new FileReader;o.readAsDataURL(e),o.onload=function(){s.addPhoto(o.result).then((function(t){if(t.ok)s.draw();else if(200!==t.status)return t.json()}),(function(t){s.handleError({message:t})}))},o.onerror=function(){s.handleError({message:o.error,blockingErrorMessage:"Ошибка загрузки фотографии (-ий): ".concat(o.error)})}},"remove-photo":function(t){var e=t.target.closest(".vg-photo").dataset.photoId;e&&s.deletePhoto(+e).then((function(t){if(t.ok)s.draw();else if(200!==t.status)return t.json()}),(function(t){s.handleError({message:t})}))},"update-photo":function(t){var e=t.target.closest(".vg-photo").dataset.photoId;e&&s.updatePhoto(+e).then((function(t){if(t.ok)s.draw();else if(200!==t.status)return t.json()}),(function(t){s.handleError({message:t})}))}}),e.default}()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,