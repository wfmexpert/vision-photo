!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.VisionPhotoGallery=t():e.VisionPhotoGallery=t()}(this,(function(){return function(){"use strict";var e={d:function(t,o){for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t={};function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){s(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function s(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}e.d(t,{default:function(){return a}});var a=function(){function e(t){var o=t.root,n=t.employeeId,r=t.visionPersonId,i=t.personId,s=t.token,a=t.controls,l=t.masterAlbum,u=void 0===l||l;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!o)throw new Error("Не указан ID корневого элемента для галереи!");var c=document.getElementById(o);if(!c)throw new Error("Проверьте указанный ID корневого элемента для галереи!");if(e.rootElement=c,!n&&!r&&!i)throw new Error("Не указан ID пользователя на портале Vision");this.employeeId=n,this.visionPersonId=r,this.personId=i,this.token=s,this.controls=a,this.masterAlbum=u,e.draw()}var t,n,s;return t=e,s=[{key:"update",value:function(e){var t=e.employeeId,o=e.token;this.employeeId=t,this.token=o,this.draw()}},{key:"handleError",value:function(e){var t=e.message,n=e.blockingErrorMessage;if(this.errorFunction){var r="";"object"===o(t)&&(t.faultstring?r=t.faultstring:Object.keys(t).reverse().forEach((function(e){r+="".concat(t[e],"<br/>")})));var i=r.length?r:JSON.stringify(t);this.errorFunction(i,"Ошибка")}else{if(n)throw new Error(n);console.log(t)}}},{key:"request",value:function(e){var t=e.requestPath,o=e.requestBody,n={method:"POST",mode:"same-origin",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":this.token},body:JSON.stringify(o)};return fetch("/api/v2/vision/".concat(t,"/"),n)}},{key:"getPhotos",value:function(){var e={};return this.employeeId&&!this.visionPersonId?e.employeeId=this.employeeId:this.visionPersonId?e.vision_person_id=this.visionPersonId:this.personId&&(e.personId=this.personId),this.request({requestPath:"get_photos",requestBody:r(r({},e),{},{masterAlbum:this.masterAlbum})})}},{key:"addPhoto",value:function(e){return this.toggleOverlayMessage("Загрузка..."),this.request({requestPath:"add_photo",requestBody:{employeeId:this.employeeId,image:e}})}},{key:"deletePhoto",value:function(e){return this.toggleOverlayMessage("Удаление фотографии..."),this.request({requestPath:"delete_photo",requestBody:{photo_id:e}})}},{key:"updatePhoto",value:function(e){return this.toggleOverlayMessage("Обновление фотографии..."),this.request({requestPath:"update_photo",requestBody:{employeeId:this.employeeId,photo_id:e}})}},{key:"setAsMainPhoto",value:function(e){return this.toggleOverlayMessage("Обновление основной фотографии..."),this.request({requestPath:"set_main_photo",requestBody:{employeeId:this.employeeId,photoId:e}})}},{key:"toggleOverlayMessage",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.galleryContainer;if(!t)throw new Error("Не найдена корневой элемент галереи");e?(t.dataset.message=e,t.classList.add("vision-photo-gallery--message")):(t.classList.remove("vision-photo-gallery--message"),t.dataset.message="")}},{key:"draw",value:function(){var e=this,t=this.rootElement;t.innerHTML='\n      <div class="vision-photo-gallery">\n        <input type="file" class="vision-photo-gallery__file-field" tabindex="-1">\n        <div class="vision-photo-gallery__item vision-photo-gallery__item--main">\n          <div class="vg-main-photo"></div>\n        </div>\n        <div class="vision-photo-gallery__item">\n          <div class="vg-gallery"></div>\n        </div>\n      </div>\n    ';var o=document.querySelector(".vision-photo-gallery");this.galleryContainer=o,this.toggleOverlayMessage("Загрузка...");var n=t.querySelector(".vg-main-photo"),r=t.querySelector(".vg-gallery"),i=this.controls.upload;this.getPhotos().then((function(t){if(n.innerHTML=e.createPhotoElement({main:!0,empty:!0,photoId:null}),i&&(r.innerHTML=e.createPhotoElement({main:!1,empty:!0,photoId:null})),t.ok)return t.json();n.innerHTML=e.createNoPhotoElement(),e.initEvents(),e.toggleOverlayMessage()}),(function(t){e.toggleOverlayMessage(),e.handleError({message:t}),e.initEvents()})).then((function(t){if(!t||!t.length)return n.innerHTML=e.createNoPhotoElement(),r.parentElement.classList.add("hidden"),void e.toggleOverlayMessage();var o=t.find((function(e){return e.main})),s=t.filter((function(e){return!e.main}));if(o?n.innerHTML=e.createPhotoElement(o):n.parentElement.classList.add("hidden"),s.length){var a="";s.forEach((function(t){return a+=e.createPhotoElement(t)})),i&&(a+=e.createPhotoElement({main:!1,empty:!0,photoId:null})),r.innerHTML=a}else i||r.parentElement.classList.add("hidden");e.initEvents(),e.toggleOverlayMessage()}),(function(t){e.handleError({message:t}),e.toggleOverlayMessage(),e.initEvents()})).catch((function(t){e.toggleOverlayMessage(),e.handleError({message:t}),e.initEvents()})),this.initEvents()}},{key:"createPhotoElement",value:function(t){var o=t.photoId,n=t.main,r=t.empty,i=t.path,s=t.avatarUrl,a=this.controls,l=a.disableAll,u=a.upload,c=a.update,d=a.remove,h="",p="",g="",v="";return!s&&i&&(g='style="background-image: url('.concat(i,')"')),s&&(g='style="background-image: url('.concat(s,')"')),n?(v='data-main="'.concat(n,'"'),r?(p="vg-photo vg-photo--main",h=e.getPhotoButtons({upload:u})):(p="vg-photo vg-photo--main",h=e.getPhotoButtons({remove:d}))):r?(p="vg-gallery__item vg-photo vg-photo--upload",h=e.getPhotoButtons({uploadIcon:u})):(p="vg-gallery__item vg-photo",h=e.getPhotoButtons({update:c,remove:d})),'\n      <div class="'.concat(p,'"\n        ').concat(g,'\n        data-photo-id="').concat(o,'"\n        ').concat(v,">\n        ").concat(l?"":h,"\n        </div>\n      ")}},{key:"createNoPhotoElement",value:function(){return'\n      <div class="vg-photo vg-photo--main">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="-256 -256 1024 1024">\n          <path fill="#4a5266"\n            d="M437 310.8c-28.4-28.4-62.2-49.2-99.1-61.7 34.1-25.2 56.2-65.6 56.2-111.1C394.1 61.9 332.1 0 256 0S117.9 61.9 117.9 138.1c0 45.5 22.1 85.9 56.2 111.1 -36.9 12.4-70.8 33.3-99.1 61.7C26.6 359.2 0 423.5 0 491.8 0 503 9 512 20.2 512h471.7c11.1 0 20.2-9 20.2-20.2C512 423.5 485.4 359.2 437 310.8zM158.2 138.1c0-53.9 43.9-97.8 97.8-97.8 53.9 0 97.8 43.9 97.8 97.8 0 53.9-43.9 97.8-97.8 97.8C202.1 235.8 158.2 192 158.2 138.1zM41.2 471.7C51.4 362.2 143.9 276.2 256 276.2s204.6 86 214.8 195.5H41.2z"/>\n        </svg>\n      </div>\n    '}},{key:"getPhotoButtons",value:function(e){if(e.disableAll)return"";var t={remove:'<button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>',upload:'<button class="vg-photo__button vg-button" data-action="upload-photo">Загрузить</button>',uploadIcon:'<button class="vg-photo__button vg-button vg-button--upload" data-action="upload-photo">&#43;</button>',update:'<button class="vg-photo__button vg-button vg-button--green" data-action="update-photo">Выбрать</button>'};return Object.keys(e).reduce((function(o,n){return e[n]&&(o+=t[n]),o}),"")}},{key:"initEvents",value:function(){var e=this;this.rootElement.querySelectorAll("button").forEach((function(t){t.addEventListener("click",e.router[t.dataset.action],!1)}))}}],(n=[{key:"errorFunction",get:function(){return e.errorFunction},set:function(t){t&&(e.errorFunction=t)}},{key:"employeeId",get:function(){return e.employeeId},set:function(t){t&&(e.employeeId=t)}},{key:"visionPersonId",get:function(){return e.visionPersonId},set:function(t){t&&(e.visionPersonId=t)}},{key:"personId",get:function(){return e.personId},set:function(t){t&&(e.personId=t)}},{key:"rootElement",get:function(){return e.rootElement}},{key:"token",get:function(){return e.token},set:function(t){t&&(e.token=t)}},{key:"controls",get:function(){return e.controls},set:function(t){e.controls=r(r({},e.controls),t)}},{key:"masterAlbum",get:function(){return e.masterAlbum},set:function(t){e.masterAlbum=t}}])&&i(t.prototype,n),s&&i(t,s),e}();return s(a,"galleryContainer",null),s(a,"employeeId",null),s(a,"visionPersonId",null),s(a,"rootElement",null),s(a,"token",null),s(a,"controls",{disableAll:!1,update:!0,upload:!0,remove:!0}),s(a,"masterAlbum",!0),s(a,"errorFunction",null),s(a,"router",{"upload-photo":function(e){var t=a.rootElement.querySelector('input[type="file"]');t.addEventListener("change",a.router["file-input-changed"]),t.click()},"file-input-changed":function(e){var t=e.target.files[0],o=new FileReader;o.readAsDataURL(t),o.onload=function(){a.addPhoto(o.result).then((function(e){if(e.ok)a.draw();else if(200!==e.status)return e.json()}),(function(e){a.handleError({message:e})}))},o.onerror=function(){a.handleError({message:o.error,blockingErrorMessage:"Ошибка загрузки фотографии (-ий): ".concat(o.error)})}},"remove-photo":function(e){var t=e.target.closest(".vg-photo").dataset.photoId;t&&a.deletePhoto(+t).then((function(e){if(e.ok)a.draw();else if(200!==e.status)return e.json()}),(function(e){a.handleError({message:e})}))},"update-photo":function(e){var t=e.target.closest(".vg-photo"),o=t.dataset.photoId,n=t.querySelectorAll("button");o&&(n.forEach((function(e){return e.setAttribute("disabled","disabled")})),a.setAsMainPhoto(+o).then((function(e){if(e.ok)a.draw();else if(200!==e.status)return e.json()}),(function(e){a.handleError({message:e})})))}}),t.default}()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,