!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.VisionPhotoGallery=e():t.VisionPhotoGallery=e()}(this,(function(){return function(){"use strict";var t={946:function(t,e,o){function n(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function r(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}o.d(e,{default:function(){return i}});var i=function(){function t(e){var o=e.root,n=e.employeeId,r=e.token;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!o)throw new Error("Не указан ID корневого элемента для галереи!");var i=document.getElementById(o);if(!i)throw new Error("Проверьте указанный ID корневого элемента для галереи!");if(this.constructor.rootElement=i,!n)throw new Error("Не указан ID пользователя на портале Vision");this.update({employeeId:n,token:r})}var e,o,r;return e=t,r=[{key:"request",value:function(t){var e=t.requestPath,o=t.requestBody,n={method:"POST",mode:"same-origin",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":this.token},body:JSON.stringify(o)};return fetch("/api/v2/vision/".concat(e,"/"),n)}},{key:"getPhotos",value:function(){return this.request({requestPath:"get_photos",requestBody:{employeeId:this.employeeId,masterAlbum:!0}})}},{key:"addPhoto",value:function(t){return this.request({requestPath:"add_photo",requestBody:{employeeId:this.employeeId,image:t}})}},{key:"deletePhoto",value:function(t){return this.request({requestPath:"delete_photo",requestBody:{employeeId:this.employeeId,photoIds:[t],masterAlbum:!0}})}},{key:"updatePhoto",value:function(t){return this.request({requestPath:"update_photo",requestBody:{employeeId:this.employeeId,photo_id:t}})}},{key:"draw",value:function(){var t=this,e=this.rootElement;e.innerHTML='\n            <div class="vision-photo-gallery">\n                <input type="file" class="vision-photo-gallery__file-field" tabindex="-1">\n                <div class="vision-photo-gallery__item vision-photo-gallery__item--main">\n                    <h4 class="vision-photo-gallery__title">Основная фотография</h4>\n                    <div class="vg-main-photo"></div>\n                </div>\n                <div class="vision-photo-gallery__item">\n                    <h4 class="vision-photo-gallery__title">Галерея</h4>\n                    <div class="vg-gallery"></div>\n                </div>\n            </div>\n        ';var o=e.querySelector(".vg-main-photo"),n=e.querySelector(".vg-gallery");this.getPhotos().then((function(e){if(o.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null}),n.innerHTML=t.createPhotoElement({main:!1,empty:!0,photoId:null}),e.ok)return e.json();o.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null}),t.initEvents()})).then((function(e){if(e){var r=e.find((function(t){return!0===t.main})),i=e.filter((function(t){return!0!==t.main}));if(r?o.innerHTML=t.createPhotoElement(r):o.parentElement.classList.add("hidden"),i.length){var a="";i.forEach((function(e){return a+=t.createPhotoElement(e)})),a+=t.createPhotoElement({main:!1,empty:!0,photoId:null}),n.innerHTML=a}t.initEvents()}})).catch((function(e){console.log(e),t.initEvents()})),this.initEvents()}},{key:"createPhotoElement",value:function(t){var e=t.photoId,o=t.main,n=t.empty,r=t.path,i=t.avatarUrl,a="",u="",l="",c="";return r&&(l='style="background-image: url('.concat(r,')"')),i&&(l='style="background-image: url('.concat(i,')"')),o&&(c='data-main="'.concat(o,'"')),o&&!n?(u="vg-photo vg-photo--main",a='\n        <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n      '):o&&n?(u="vg-photo vg-photo--main",a='\n        <button class="vg-photo__button vg-button" data-action="upload-photo">Загрузить</button>\n      '):!o&&n?(u="vg-gallery__item vg-photo vg-photo--upload",a='\n        <button class="vg-photo__button vg-button vg-button--upload" data-action="upload-photo">&#43;</button>\n      '):(u="vg-gallery__item vg-photo",a='\n        <button class="vg-photo__button vg-button vg-button--green" data-action="update-photo">Выбрать</button>\n        <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n      '),'\n      <div class="'.concat(u,'"\n        ').concat(l,'\n        data-photo-id="').concat(e,'"\n        ').concat(c,">\n        ").concat(a,"\n        </div>\n      ")}},{key:"initEvents",value:function(){var t=this;this.rootElement.querySelectorAll("button").forEach((function(e){e.addEventListener("click",t.router[e.dataset.action],!1)}))}}],(o=[{key:"update",value:function(t){var e=t.employeeId,o=t.token;this.employeeId=e,this.token=o,this.constructor.draw()}},{key:"employeeId",get:function(){return this.constructor.employeeId},set:function(t){t&&(this.constructor.employeeId=t)}},{key:"rootElement",get:function(){return this.constructor.rootElement}},{key:"token",get:function(){return this.constructor.token},set:function(t){t&&(this.constructor.token=t)}}])&&n(e.prototype,o),r&&n(e,r),t}();r(i,"employeeId",null),r(i,"rootElement",null),r(i,"token",null),r(i,"router",{"upload-photo":function(t){var e=i.rootElement.querySelector('input[type="file"]');e.addEventListener("change",i.router["file-input-changed"]),e.click()},"file-input-changed":function(t){var e=t.target.files[0],o=new FileReader;o.readAsDataURL(e),o.onload=function(){i.addPhoto(o.result).then((function(t){t.ok&&i.draw()})).catch((function(t){console.log(t)}))},o.onerror=function(){throw new Error("Ошибка загрузки фотографии (-ий): ".concat(o.error))}},"remove-photo":function(t){var e=t.target.closest(".vg-photo").dataset.photoId;e&&i.deletePhoto(+e).then((function(t){t.ok&&i.draw()}))},"update-photo":function(t){var e=t.target.closest(".vg-photo").dataset.photoId;e&&i.updatePhoto(+e).then((function(t){t.ok&&i.draw()})).catch((function(t){console.log(t)}))}})}},e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={exports:{}};return t[n](r,r.exports,o),r.exports}return o.d=function(t,e){for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o(946)}().default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,