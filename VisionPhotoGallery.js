var VisionPhotoGallery;VisionPhotoGallery=function(){"use strict";var t={352:function(){function t(t,o){for(var e=0;e<o.length;e++){var n=o[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function o(t,o,e){return o in t?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e,t}var e=function(){function o(t){var e=t.root,n=t.personId,r=t.token;if(function(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}(this,o),!e)throw new Error("Не указан ID корневого элемента для галереи!");var i=document.getElementById(e);if(!i)throw new Error("Проверьте указанный ID корневого элемента для галереи!");if(this.constructor.rootElement=i,!n)throw new Error("Не указан ID пользователя на портале Vision");this.personId=n,this.token=r,this.constructor.draw()}var e,n,r;return e=o,r=[{key:"request",value:function(t){var o=t.requestPath,e=t.requestBody,n={method:"POST",mode:"same-origin",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":this.token},body:JSON.stringify(e)};return fetch("/api/v2/vision/".concat(o,"/"),n)}},{key:"getPhotos",value:function(){return this.request({requestPath:"get_photos",requestBody:{person_id:this.personId,masterAlbum:!0}})}},{key:"addPhoto",value:function(t){return this.request({requestPath:"add_photo",requestBody:{person_id:this.personId,image:t}})}},{key:"deletePhoto",value:function(t){return this.request({requestPath:"delete_photo",requestBody:{person_id:this.personId,photo_ids:[t],masterAlbum:!0}})}},{key:"updatePhoto",value:function(t){return this.request({requestPath:"delete_photo",requestBody:{person_id:this.personId,photo_id:t,masterAlbum:!0}})}},{key:"draw",value:function(){var t=this,o=this.rootElement;o.innerHTML='\n            <div class="vision-photo-gallery">\n                <input type="file" class="vision-photo-gallery__file-field" tabindex="-1">\n                <div class="vision-photo-gallery__item vision-photo-gallery__item--main">\n                    <h4 class="vision-photo-gallery__title">Основная фотография</h4>\n                    <div class="vg-main-photo"></div>\n                </div>\n                <div class="vision-photo-gallery__item">\n                    <h4 class="vision-photo-gallery__title">Галерея</h4>\n                    <div class="vg-gallery"></div>\n                </div>\n            </div>\n        ';var e=o.querySelector(".vg-main-photo"),n=o.querySelector(".vg-gallery");this.getPhotos().then((function(o){if(e.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null}),n.innerHTML=t.createPhotoElement({main:!1,empty:!0,photoId:null}),o.ok)return o.json();e.innerHTML=t.createPhotoElement({main:!0,empty:!0,photoId:null})})).then((function(o){var r=o.find((function(t){return!0===t.main})),i=o.filter((function(t){return!0!==t.main}));if(r?e.innerHTML=t.createPhotoElement(r):e.parentElement.classList.add("hidden"),i.length){var a="";i.forEach((function(o){return a+=t.createPhotoElement(o)})),n.innerHTML=a}t.initEvents()})).catch((function(t){console.log(t)}))}},{key:"createPhotoElement",value:function(t){var o=t.photoId,e=t.main,n=t.empty,r=t.path,i=t.avatarUrl,a="",u="",s="",c="";return r&&(s='style="background-image: url('.concat(r,')"')),i&&(s='style="background-image: url('.concat(i,')"')),e&&(c='data-main="'.concat(e,'"')),e&&!n||e&&n?(u="vg-photo vg-photo--main",a='\n                <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n            '):!e&&n?(u="vg-gallery__item vg-photo vg-photo--upload",a='\n                <button class="vg-photo__button vg-button vg-button--upload" data-action="upload-photo">&#43;</button>\n            '):(u="vg-gallery__item vg-photo",a='\n                <button class="vg-photo__button vg-button vg-button--green" data-action="choose-photo">Выбрать</button>\n                <button class="vg-photo__button vg-button vg-button--red" data-action="remove-photo">Удалить</button>\n            '),'\n            <div class="'.concat(u,'"\n                ').concat(s,'\n                data-photo-id="').concat(o,'"\n                ').concat(c,">\n                ").concat(a,"\n            </div>\n        ")}},{key:"initEvents",value:function(){var t=this;this.rootElement.querySelectorAll("button").forEach((function(o){o.addEventListener("click",t.router[o.dataset.action],!1)}))}}],(n=[{key:"personId",get:function(){return this.constructor.personId},set:function(t){t&&(this.constructor.personId=t)}},{key:"rootElement",get:function(){return this.constructor.rootElement}},{key:"token",get:function(){return this.constructor.token},set:function(t){t&&(this.constructor.token=t)}}])&&t(e.prototype,n),r&&t(e,r),o}();o(e,"personId",null),o(e,"rootElement",null),o(e,"token",null),o(e,"router",{"upload-photo":function(t){var o=e.rootElement.querySelector('input[type="file"]');o.addEventListener("change",e.router["file-input-changed"]),o.click()},"file-input-changed":function(t){var o=t.target.files[0],n=new FileReader;n.readAsDataURL(o),n.onload=function(){e.addPhoto(n.result).then((function(t){t.ok&&e.draw()})).catch((function(t){console.log(t)}))},n.onerror=function(){throw new Error("Ошибка загрузки фотографии (-ий): ".concat(n.error))}},"remove-photo":function(t){var o=t.target.closest(".vg-photo").dataset.photoId;o&&e.deletePhoto(o).then((function(t){t.ok&&e.draw()}))},"update-photo":function(t){var o=t.target.closest(".vg-photo").dataset.photoId;o&&e.updatePhoto(o).then((function(t){t.ok&&e.draw()})).catch((function(t){console.log(t)}))}})}},o={};return function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{}};return t[n](r,r.exports,e),r.exports}(352)}().default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,